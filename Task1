import re

def check_password_strength(password):
    # Initialize a score
    score = 0
    
    # Check length
    if len(password) >= 8:
        score += 1
    if len(password) >= 12:
        score += 1
    
    # Check for uppercase letters
    if re.search(r'[A-Z]', password):
        score += 1
    
    # Check for lowercase letters
    if re.search(r'[a-z]', password):
        score += 1
    
    # Check for digits
    if re.search(r'\d', password):
        score += 1
    
    # Check for special characters
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 1
    
    # Check for sequences of repeated characters
    if not re.search(r'(.)\1{2,}', password):
        score += 1
    
    # Provide feedback based on score
    if score <= 2:
        return "Weak password: try using a mix of characters, digits, and symbols."
    elif score <= 4:
        return "Moderate password: consider increasing length and adding special characters."
    elif score == 5:
        return "Strong password: good balance of length and complexity."
    else:
        return "Very strong password: excellent security."

# Test the function
password = input("Enter your password: ")
strength_feedback = check_password_strength(password)
print(strength_feedback)
